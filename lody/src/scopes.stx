module scopes

imports

  signatures/start-sig
  main
  
signature
relations
  name : ID -> Expr
name-resolution
  labels P
  
rules

  scopePutType : scope * ID * Expr -> scope
  scopePutType(s, id, t) = s' :-
  	new s', s' -P-> s,
  	!name[id, t] in s'.

  scopeGetName : scope * ID -> Expr
  scopeGetName(s, id) = result :- {id'}
  	scopeGetNames(s, id) == [(_, (id', result))] | error $[Unknown variable [id] in [s]],
  	@id.ref := id'.
  
  scopeGetNames : scope * ID -> list((path * (ID * Expr)))
  scopeGetNames(s, id) = results :-
  	query name filter P* and { id' :- id' == id } min $ < P in s |-> results.

  empty_scope : -> scope
  empty_scope() = s :- new s.
  
  
  