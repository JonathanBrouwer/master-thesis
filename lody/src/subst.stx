module subst

imports

  signatures/start-sig
  
rules
  substExpr : Expr * ID * Expr -> Expr
  substExpr(Type(), _, _) = Type().
  substExpr(Var(n), n, with) = with.
  substExpr(Var(n), _, _) = Var(n).
  substExpr(FnType(n, t, b), n, with) = FnType(n, substExpr(t, n, with), b).
  substExpr(FnType(n1, t, b), n2, with) = FnType(n1, substExpr(t, n2, with), substExpr(b, n2, with)).
  substExpr(FnConstruct(n, t, b), n, with) = FnConstruct(n, substExpr(t, n, with), b).
  substExpr(FnConstruct(n1, t, b), n2, with) = FnConstruct(n1, substExpr(t, n2, with), substExpr(b, n2, with)).
  substExpr(FnDestruct(a, b), n, with) = FnDestruct(substExpr(a, n, with), substExpr(b, n, with)).
  substExpr(Let(n, v, b), n, with) = Let(n, substExpr(v, n, with), b).
  substExpr(Let(n1, v, b), n2, with) = Let(n1, substExpr(v, n2, with), substExpr(b, n2, with)).