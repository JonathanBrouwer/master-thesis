module subst

imports

  signatures/start-sig
  main
  
rules
  subst : Expr * ID * Expr -> Expr
  subst(Type(), _, _) = Type().
  subst(e@AlphaEqVars(_, _), _, _) = e.
  subst(Var(n), n, with) = with.
  subst(Var(n), _, _) = Var(n).
  subst(FnType(n, t, b), n, with) = FnType(n, subst(t, n, with), b).
  subst(FnType(n1, t, b), n2, with) = FnType(n1, subst(t, n2, with), subst(b, n2, with)).
  subst(FnConstruct(n, t, b), n, with) = FnConstruct(n, subst(t, n, with), b).
  subst(FnConstruct(n1, t, b), n2, with) = FnConstruct(n1, subst(t, n2, with), subst(b, n2, with)).
  subst(FnDestruct(a, b), n, with) = FnDestruct(subst(a, n, with), subst(b, n, with)).
  subst(Let(n, v, b), n, with) = Let(n, subst(v, n, with), b).
  subst(Let(n1, v, b), n2, with) = Let(n1, subst(v, n2, with), subst(b, n2, with)).