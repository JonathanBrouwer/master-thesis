module interpreter

test bool [[
[[
if true then true else false end
]]
]] 0 errors run interpret-expr on #1 to BoolTrue()

test data type [[
[[
data Nat : -> Type 0 where;
true
]]
]] 0 errors run interpret-expr on #1 to DataTypeDecl(Syn("Nat"), [], [], Type(0), [], BoolTrue())

test data type 2 [[
[[
data Nat : -> Type 0 where;
Nat
]]
]] 0 errors run interpret-expr on #1 to DataTypeDecl(Syn("Nat"), [], [], Type(0), [], Var(Syn("Nat")))