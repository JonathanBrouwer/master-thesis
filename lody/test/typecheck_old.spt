module old

test beta eq 1 [[
[[
let x = / T : Type. /x : T. x;
x (_: Type -> Type)
]]
]] 0 errors run get-type on #1 to FnType(_, FnType(_, Type(), Type()), FnType(_, Type(), Type()))

test test [[
[[
(/f: (let y = (_: Type -> _: Type -> Type); (let y = Type; /x: y. x) (_: Type -> Type)). f)
]]
]] 0 errors run get-type on #1 to FnType("f", FnType("_", Type(), Type()), FnType("_", Type(), Type()))

test shadow [[
[[
let x = Type;
let y = x;
let x = _: Type -> Type;
/v: y. v
]]
]] 0 errors run get-type on #1 to FnType("v", Type(), Type())

test shadow 2 [[
[[
let prod = /P : Type. P;
/R : Type. /x: prod R. x
]]
]] 0 errors  run get-type on #1 to FnType("R", Type(), FnType("x", Var("R"), Var("R")))




