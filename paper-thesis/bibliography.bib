@article{Coquand_Huet_1988, title={The calculus of constructions}, volume={76}, ISSN={08905401}, url={https://linkinghub.elsevier.com/retrieve/pii/0890540188900053}, DOI={10.1016/0890-5401(88)90005-3}, number={2–3}, journal={Information and Computation}, author={Coquand, Thierry and Huet, Gérard}, year={1988}, month={Feb}, pages={95–120}, language={en} }

@article{scopes_as_types, title={Scopes as types}, volume={2}, DOI={10.1145/3276484}, number={OOPSLA}, journal={Proceedings of the ACM on Programming Languages}, author={van Antwerpen, Hendrik and Bach Poulsen, Casper and Rouvoet, Arjen and Visser, Eelco}, year={2018}, pages={1–30}}

@article{spoofax,
	author = {Kats, Lennart and Visser, Eelco},
	year = {2010},
	month = {10},
	pages = {237-238},
	title = {The Spoofax language workbench},
	volume = {45},
	isbn = {978-1-4503-0240-1},
	journal = {ACM SIGPLAN Notices},
	doi = {10.1145/1869542.1869592}
}

@article{stratego,
	title = {Stratego/XT 0.17. A language and toolset for program transformation},
	journal = {Science of Computer Programming},
	volume = {72},
	number = {1},
	pages = {52-70},
	year = {2008},
	note = {Special Issue on Second issue of experimental software and toolkits (EST)},
	issn = {0167-6423},
	doi = {https://doi.org/10.1016/j.scico.2007.11.003},
	url = {https://www.sciencedirect.com/science/article/pii/S0167642308000452},
	author = {Martin Bravenboer and Karl Trygve Kalleberg and Rob Vermaas and Eelco Visser},
	keywords = {Stratego, Stratego/XT, Program transformation, Rewriting strategies, Rewrite rules, Concrete syntax, Dynamic rewrite rules},
	abstract = {Stratego/XT is a language and toolset for program transformation. The Stratego language provides rewrite rules for expressing basic transformations, programmable rewriting strategies for controlling the application of rules, concrete syntax for expressing the patterns of rules in the syntax of the object language, and dynamic rewrite rules for expressing context-sensitive transformations, thus supporting the development of transformation components at a high level of abstraction. The XT toolset offers a collection of flexible, reusable transformation components, and tools for generating such components from declarative specifications. Complete program transformation systems are composed from these components. This paper gives an overview of Stratego/XT 0.17, including a description of the Stratego language and XT transformation tools; a discussion of the implementation techniques and software engineering process; and a description of applications built with Stratego/XT.}
}

@article{sdf3,
	author = {Kats, Lennart C.L. and Visser, Eelco and Wachsmuth, Guido},
	title = {Pure and Declarative Syntax Definition: Paradise Lost and Regained},
	year = {2010},
	issue_date = {October 2010},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	volume = {45},
	number = {10},
	issn = {0362-1340},
	url = {https://doi.org/10.1145/1932682.1869535},
	doi = {10.1145/1932682.1869535},
	abstract = {Syntax definitions are pervasive in modern software systems, and serve as the basis for language processing tools like parsers and compilers. Mainstream parser generators pose restrictions on syntax definitions that follow from their implementation algorithm. They hamper evolution, maintainability, and compositionality of syntax definitions. The pureness and declarativity of syntax definitions is lost. We analyze how these problems arise for different aspects of syntax definitions, discuss their consequences for language engineers, and show how the pure and declarative nature of syntax definitions can be regained.},
	journal = {SIGPLAN Not.},
	month = {oct},
	pages = {918–932},
	numpages = {15},
	keywords = {grammars, sdf, syntax definition, parsers, sglr, grammarware, declarative}
}

@article{sdf3_parser,
	author = {Visser, Eelco},
	year = {1999},
	month = {04},
	pages = {},
	title = {Scannerless generalized-LR parsing}
}

@article{krivine,
	author = {Krivine, Jean-Louis},
	title = {A Call-by-Name Lambda-Calculus Machine},
	year = {2007},
	issue_date = {September 2007},
	publisher = {Kluwer Academic Publishers},
	address = {USA},
	volume = {20},
	number = {3},
	issn = {1388-3690},
	url = {https://doi.org/10.1007/s10990-007-9018-9},
	doi = {10.1007/s10990-007-9018-9},
	abstract = {We present a particularly simple lazy lambda-calculus machine, which was introduced twenty-five years ago. It has been, since, used and implemented by several authors, but remained unpublished. We also build an extension, with a control instruction and continuations. This machine was conceived in order to execute programs obtained from mathematical proofs, by means of the Curry-Howard (also known as "proof-program") correspondence. The control instruction corresponds to the axiom of excluded middle.},
	journal = {Higher Order Symbol. Comput.},
	month = {sep},
	pages = {199–207},
	numpages = {9},
	keywords = {Curry-Howard correspondence, Lambda-calculus machine, Control instruction}
}

@article{lambda_cube, title={Introduction to generalized type systems}, volume={1}, DOI={10.1017/S0956796800020025}, number={2}, journal={Journal of Functional Programming}, publisher={Cambridge University Press}, author={Barendregt, Henk}, year={1991}, pages={125–154}}

@misc{pi_forall,
	doi = {10.48550/ARXIV.2207.02129},
	url = {https://arxiv.org/abs/2207.02129},
	author = {Weirich, Stephanie},
	keywords = {Programming Languages (cs.PL), FOS: Computer and information sciences, FOS: Computer and information sciences, D.3.1; D.3.3; F.3.3},
	title = {Implementing Dependent Types in pi-forall},
	publisher = {arXiv},
	year = {2022},
	copyright = {Creative Commons Attribution 4.0 International}
}


@inproceedings{codecompletion,
	author = {Pelsmaeker, Daniel and Antwerpen, Hendrik and Visser, Eelco},
	year = {2019},
	month = {10},
	pages = {19-20},
	title = {Towards language-parametric semantic editor services based on declarative type system specifications},
	isbn = {978-1-4503-6992-3},
	doi = {10.1145/3359061.3362782}
}

@inproceedings{scope_graphs,
	title = {A Theory of Name Resolution},
	author = {Pierre Néron and Andrew P. Tolmach and Eelco Visser and Guido Wachsmuth},
	year = {2015},
	doi = {10.1007/978-3-662-46669-8_9},
	url = {http://dx.doi.org/10.1007/978-3-662-46669-8_9},
	researchr = {https://researchr.org/publication/NeronTVW15},
	cites = {0},
	citedby = {0},
	pages = {205-231},
	booktitle = {Programming Languages and Systems - 24th European Symposium on Programming, ESOP 2015, Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015, London, UK, April 11-18, 2015. Proceedings},
	editor = {Jan Vitek},
	volume = {9032},
	series = {Lecture Notes in Computer Science},
	publisher = {Springer},
	isbn = {978-3-662-46668-1},
}

@inproceedings{MagnussonN93,
	title = {The ALF Proof Editor and Its Proof Engine},
	author = {Lena Magnusson and Bengt Nordström},
	year = {1993},
	researchr = {https://researchr.org/publication/MagnussonN93},
	cites = {0},
	citedby = {0},
	pages = {213-237},
	booktitle = {Types for Proofs and Programs, International Workshop TYPES 93, Nijmegen, The Netherlands, May 24-28, 1993, Selected Papers},
	editor = {Henk Barendregt and Tobias Nipkow},
	volume = {806},
	series = {Lecture Notes in Computer Science},
	publisher = {Springer},
	isbn = {3-540-58085-9},
}

@inproceedings{PfenningS99,
	title = {System Description: Twelf - A Meta-Logical Framework for Deductive Systems},
	author = {Frank Pfenning and Carsten Schürmann},
	year = {1999},
	url = {http://link.springer.de/link/service/series/0558/bibs/1632/16320202.htm},
	tags = {meta-model, Meta-Environment, meta-objects},
	researchr = {https://researchr.org/publication/PfenningS99},
	cites = {0},
	citedby = {0},
	pages = {202-206},
	booktitle = {Automated Deduction - CADE-16, 16th International Conference on Automated Deduction, Trento, Italy, July 7-10, 1999, Proceedings},
	editor = {Harald Ganzinger},
	volume = {1632},
	series = {Lecture Notes in Computer Science},
	publisher = {Springer},
	isbn = {3-540-66222-7},
}

@inproceedings{BoespflugCH12,
	title = {The LM-calculus Modulo as a Universal Proof Language},
	author = {Mathieu Boespflug and Quentin Carbonneaux and Olivier Hermant},
	year = {2012},
	url = {http://ceur-ws.org/Vol-878/paper2.pdf},
	researchr = {https://researchr.org/publication/BoespflugCH12},
	cites = {0},
	citedby = {0},
	pages = {28-43},
	booktitle = {Proceedings of the Second International Workshop on Proof Exchange for Theorem Proving, PxTP 2012, Manchester, UK, June 30, 2012},
	editor = {David Pichardie and Tjark Weber},
	volume = {878},
	series = {CEUR Workshop Proceedings},
	publisher = {CEUR-WS.org},
}

@inproceedings{BauerHP20,
	title = {Equality Checking for General Type Theories in Andromeda 2},
	author = {Andrej Bauer and Philipp G. Haselwarter and Anja Petkovic},
	year = {2020},
	doi = {10.1007/978-3-030-52200-1_25},
	url = {https://doi.org/10.1007/978-3-030-52200-1_25},
	researchr = {https://researchr.org/publication/BauerHP20},
	cites = {0},
	citedby = {0},
	pages = {253-259},
	booktitle = {Mathematical Software - ICMS 2020 - 7th International Conference, Braunschweig, Germany, July 13-16, 2020, Proceedings},
	editor = {Anna Maria Bigatti and Jacques Carette and James H. Davenport and Michael Joswig and Timo de Wolff},
	volume = {12097},
	series = {Lecture Notes in Computer Science},
	publisher = {Springer},
	isbn = {978-3-030-52200-1},
}

@inproceedings{Miller89,
	title = {A Logic Programming Language with Lambda-Abstraction, Function Variables, and Simple Unification},
	author = {Dale Miller},
	year = {1989},
	tags = {programming languages, logic programming, programming, logic, abstraction},
	researchr = {https://researchr.org/publication/Miller89},
	cites = {0},
	citedby = {0},
	pages = {253-281},
	booktitle = {Extensions of Logic Programming, International Workshop, Tübingen, FRG, December 8-10, 1989, Proceedings},
	editor = {Peter Schroeder-Heister},
	volume = {475},
	series = {Lecture Notes in Computer Science},
	publisher = {Springer},
	isbn = {3-540-53590-X},
}

@inbook{pfenning_1991, place={Cambridge}, title={Logic programming in the LF logical framework}, DOI={10.1017/CBO9780511569807.008}, booktitle={Logical Frameworks}, publisher={Cambridge University Press}, author={Pfenning, Frank}, editor={Huet, Gerard and Plotkin, G.Editors}, year={1991}, pages={149–182}}

@article{aterm,
	author = {Jong, H. and Olivier, P. and Stichting, Copyright and Centrum, Mathematisch and Klint, Paul and Olivier, Pieter},
	year = {2000},
	month = {03},
	pages = {},
	title = {Efficient Annotated Terms},
	volume = {30},
	journal = {Software: Practice and Experience},
	doi = {10.1002/(SICI)1097-024X(200003)30:3<259::AID-SPE298>3.0.CO;2-Y}
}


@inproceedings{typeinference,
	title={Type inference, Haskell and dependent types},
	author={Adam Gundry},
	year={2013}
}

@misc{expression_problem, title={https://homepages.inf.ed.ac.uk/wadler/papers/expression/expression.txt}, url={https://homepages.inf.ed.ac.uk/}, journal={The University Of Edinburgh Homepages}, author={Wadler, Philip}, year={1998}, month={Nov}} 

@mastersthesis{Zwaan21,
	title = {Composable Type System Specification using Heterogeneous Scope Graphs},
	author = {Zwaan, Aron},
	year = {2021},
	month = {January},
	url = {http://resolver.tudelft.nl/uuid:68b7291c-0f81-4a70-89bb-37624f8615bd},
	school = {Delft University of Technology}
}

@misc{chc, howpublished={\url{https://www.cs.cornell.edu/courses/cs3110/2021sp/textbook/adv/curry-howard.html}}, title={Curry-Howard correspondence}, year ={2021}, month=jun} 