module start

context-free start-symbols

  Start

context-free sorts

  Start Stmt Expr ID

context-free syntax

  Start.Program = Expr
  
  Expr.Let = [let [ID] = [Expr]; [Expr]]
  Expr.Type = "Type"
  Expr.Var = ID
  Expr.FnType = ID ":" Expr "->" Expr {right}
  Expr.FnConstruct = "/" ID ":" Expr "." Expr
  Expr.FnDestruct = Expr Expr {left}
  
  ID.R = IDR
  
  Expr = "(" Expr ")" {bracket}
  
context-free priorities
  Expr.Type > Expr.Var > Expr.FnType > Expr.FnDestruct > Expr.FnConstruct > Expr.Let
  
context-free restrictions

  LAYOUT? -/- [\ \n\t\v\f\r]
  
lexical sorts
  IDR

lexical syntax

  LAYOUT = [\ \n\t\v\f\r]
  
  IDR = [a-zA-Z\_] [a-zA-Z0-9\_]*
  IDR = "Type" {reject}
  IDR = "let" {reject}
  
lexical restrictions

  IDR -/- [a-zA-Z0-9\_]


