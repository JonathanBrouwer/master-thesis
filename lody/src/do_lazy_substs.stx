module do_lazy_substs

imports

  signatures/start-sig
  scopes

rules

  doLazySubsts : scope * Expr -> Expr
  doLazySubsts(_, Type()) = Type().
  doLazySubsts(s, Var(n)) = doLazySubstsName(n, scopeGetNames(s, n)).
  doLazySubstsName : ID * list((path * (ID * NameEntry))) -> Expr
  doLazySubstsName(n, [(_, (_, NameSubst(sw, w))) | _]) = doLazySubsts(sw, w).
  doLazySubstsName(n, _) = Var(n).
  doLazySubsts(s, e@AlphaEqVars(_, _)) = e.
  doLazySubsts(s, FnType(arg_name, arg_type, rtrn)) = 
  	FnType(arg_name, doLazySubsts(s, arg_type), doLazySubsts(scopePutType(s, arg_name, (empty_scope(), Type())), rtrn)).
  doLazySubsts(s, FnConstruct(arg_name, arg_type, body)) = 
  	FnConstruct(arg_name, doLazySubsts(s, arg_type), doLazySubsts(scopePutType(s, arg_name, (empty_scope(), Type())), body)).
  doLazySubsts(s, FnDestruct(fn, arg)) = FnDestruct(doLazySubsts(s, fn), doLazySubsts(s, arg)).
  doLazySubsts(s, Let(n, v, b)) = doLazySubsts(scopePutSubst(s, n, (s, v)), b).
  doLazySubsts(s, WithSubst(e, n, v)) = doLazySubsts(scopePutSubst(s, n, v), e).

  
  