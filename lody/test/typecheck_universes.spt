module typecheck_universes

test type bool [[
[[Bool]]
]] 0 errors run get-type on #1 to Type(0)

test type 0 [[
[[Type 0]]
]] 0 errors run get-type on #1 to Type(1)

test type 18 [[
[[Type 18]]
]] 0 errors run get-type on #1 to Type(19)

test id fn 0a [[
[[\x: Type. x]]
]] 0 errors run get-type on #1 to FnType(_, Type(0), Type(0))

test id fn 0b [[
[[\x: Type 0. x]]
]] 0 errors run get-type on #1 to FnType(_, Type(0), Type(0))

test id fn 1 [[
[[\x: Type 1. x]]
]] 0 errors run get-type on #1 to FnType(_, Type(1), Type(1))

test id fn 17 [[
[[\x: Type 17. x]]
]] 0 errors run get-type on #1 to FnType(_, Type(17), Type(17))

test fn type unbalanced [[
[[_: Type 9 -> Bool]]
]] 0 errors run get-type on #1 to Type(10)

test fn type unbalanced [[
[[_: Bool -> Type 9]]
]] 0 errors run get-type on #1 to Type(10)

test list of types 0 [[
data List : -> Type 1 where
	Nil : List,
	Cons : t: Type -> c: List -> List;
Nil :: List
]] 0 errors 

test list of types 1 [[
data List : -> Type 1 where
	Nil : List,
	Cons : t: Type -> c: List -> List;
(Cons Bool Nil) :: List
]] 0 errors 

test list of types 2 [[
data List : -> Type 1 where
	Nil : List,
	Cons : t: Type -> c: List -> List;
postulate F : Type;
(Cons F (Cons Bool Nil)) :: List
]] 0 errors 


